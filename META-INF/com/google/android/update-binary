#!/sbin/sh
# Author: cjybyjk (cjybyjk@gmail.com)
# script for removing Project WIPE
# supported platform: any supported in Project WIPE

OUTFD=$2
ZIP=$3
ui_print() {
    echo -n -e "ui_print $1\n" >> /proc/self/fd/$OUTFD
    echo -n -e "ui_print\n" >> /proc/self/fd/$OUTFD
}

is_mounted() {
    if [ ! -z "$2" ]; then
        cat /proc/mounts | grep $1 | grep $2, >/dev/null
    else
        cat /proc/mounts | grep $1 >/dev/null
    fi
    return $?
}

toolbox_mount() {
    RW=rw
    if [ ! -z "$2" ]; then
        RW=$2
    fi

    DEV=
    POINT=
    FS=
    for i in `cat /etc/fstab | grep "$1"`; do
        if [ -z "$DEV" ]; then
            DEV=$i
        elif [ -z "$POINT" ]; then
            POINT=$i
        elif [ -z "$FS" ]; then
            FS=$i
            break
        fi
    done
    if (! is_mounted $1 $RW); then mount -t $FS -o $RW $DEV $POINT; fi
    if (! is_mounted $1 $RW); then mount -t $FS -o $RW,remount $DEV $POINT; fi

    DEV=
    POINT=
    FS=
    for i in `cat /etc/recovery.fstab | grep "$1"`; do
        if [ -z "$POINT" ]; then
            POINT=$i
        elif [ -z "$FS" ]; then
            FS=$i
        elif [ -z "$DEV" ]; then
            DEV=$i
            break
        fi
    done
    if [ "$FS" = "emmc" ]; then
        if (! is_mounted $1 $RW); then mount -t ext4 -o $RW $DEV $POINT; fi
        if (! is_mounted $1 $RW); then mount -t ext4 -o $RW,remount $DEV $POINT; fi
        if (! is_mounted $1 $RW); then mount -t f2fs -o $RW $DEV $POINT; fi
        if (! is_mounted $1 $RW); then mount -t f2fs -o $RW,remount $DEV $POINT; fi
    else
        if (! is_mounted $1 $RW); then mount -t $FS -o $RW $DEV $POINT; fi
        if (! is_mounted $1 $RW); then mount -t $FS -o $RW,remount $DEV $POINT; fi
    fi
}

remount_system_rw() {
    if (! is_mounted /system rw); then mount -o rw,remount /system; fi
    if (! is_mounted /system rw); then mount -o rw,remount /system /system; fi
    if (! is_mounted /system rw); then toolbox_mount /system; fi
}

ui_print " "
ui_print "**************************"
ui_print "  Project WIPE remover"
ui_print "  Authors:"
ui_print "  Project WIPE: yc9559"
ui_print "  ZIP flashable: cjybyjk"
ui_print "**************************"
ui_print " "

ui_print "- Mounting /system and /data"
    remount_system_rw
    toolbox_mount /data

ui_print "- Extracting files"
    mkdir /tmp/WIPE
    cd /tmp/WIPE
    unzip -o "$ZIP"

ui_print "- Reomving files"
    rm -f /system/xbin/powercfg
    cat ./list_of_bootable | while read lineinText
    do 
        fileFormat=`echo $lineinText | awk '{print \$1}'`
        pathtofile=`echo $lineinText | awk -F \" '{print \$2}'`
        bootinIMG=`echo $lineinText | awk -F \" '{print \$4}'`
        pathinIMG=`echo $lineinText | awk -F \" '{print \$6}'`
        case "$fileFormat" in
        "[D]" )
            if [ -d "$pathtofile" ]; then
                ui_print "  $pathtofile found, deleting 99prjwipe"
                    rm -f "$pathtofile/99prjwipe"
            fi
            ;;
        "[F]" )
             if [ -f "$pathtofile" ]; then
                # restore backup
                if [ -f "$pathtofile.wipebak" ]; then
                    ui_print "  restoring backup of $pathtofile"
                    rm -f "$pathtofile"
                    mv "$pathtofile.wipebak" "$pathtofile"
                fi
            fi
            ;;
        "[I]" )
            if [ -f "$pathtofile" ]; then
                ui_print "  $pathtofile found, mounting..."
                    mount "$pathtofile" ./mountimg
                ui_print "  removing file on $bootinIMG..."
                    rm -f "./mountimg/$bootinIMG/99prjwipe"
                ui_print "  removing powercfg on $pathinIMG..."
                    rm -f "./mountimg/$pathinIMG/powercfg"
                ui_print "  Unmounting $pathtofile"
                    umount ./mountimg
            fi
            ;;
        esac
    done
    rm -f /data/media/0/wipe_mode

ui_print "- Cleaning files"
    cd /
    rm -rf /tmp/WIPE

ui_print "- Unmouting /system"
    umount /system

ui_print "- Done!"
exit 0
